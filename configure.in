dnl Process this file with autoconf to produce a configure script for dict.
dnl
dnl Created: Sun Mar 16 09:39:31 1997 by faith@cs.unc.edu
dnl Revised: Fri Jul 11 22:42:47 1997 by faith@acm.org
dnl Copyright 1997 Rickard E. Faith (faith@cs.unc.edu)
dnl
dnl This program is free software; you can redistribute it and/or modify it
dnl under the terms of the GNU General Public License as published by the
dnl Free Software Foundation; either version 1, or (at your option) any
dnl later version.
dnl
dnl This program is distributed in the hope that it will be useful, but
dnl WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License along
dnl with this program; if not, write to the Free Software Foundation, Inc.,
dnl 675 Mass Ave, Cambridge, MA 02139, USA.
dnl
dnl $Id: configure.in,v 1.12 1997/07/12 02:59:41 faith Exp $
dnl
dnl Flag conventions:
dnl     CFLAGS and LDFLAGS should be settable on the make commandline
dnl             for optimization and stripping.
dnl     WCFLAGS and WLDFLAGS are warnings and stuff that we like (e.g., -pipe)
dnl     XTRACFLAGS, XTRALDFLAGS are for things like dmalloc
dnl     LIBOBJS is an automatically-generated list of extra objects we need
dnl These aren't used for libmaa:
dnl     XCFLAGS and XLDFLAGS are for X11
dnl     YCFLAGS is for yacc
dnl     LCFLAGS is for lex

AC_PREREQ(2.1)
AC_REVISION($Revision: 1.12 $)
AC_INIT(webfmt.c)
AC_CONFIG_HEADER(config.h)

prefix=/usr
datadir=/usr/lib

echo Configuring for dict-web1913
echo .

AC_ARG_WITH(cc,
[  --with-cc               with cc (instead of gcc)],
CC=cc)

AC_CANONICAL_HOST
AC_PROG_CC
AC_ISC_POSIX

REALCC="$CC"
if test "$CC" = gcc; then
    CFLAGS='-g -O'
    WCFLAGS='-Wall'
else
    CFLAGS='-g'
fi

local_dmalloc=0
local_libmaa=0

case "$host" in
dnl did include: -Winline
*linux*)
    WCFLAGS="$WCFLAGS -pipe -Wwrite-strings -Wpointer-arith -Wcast-align \
        -Wmissing-prototypes -Wshadow -Wnested-externs -Waggregate-return";;
sparc-sun-sunos*)
    WCFLAGS="$WCFLAGS -pipe";;
esac

AC_ARG_WITH(cflags,
[  --with-cflags=FLAGS     use FLAGS for CFLAGS],
CFLAGS="$withval")

AC_ARG_WITH(prof,
[  --with-prof             with prof profiling],
CFLAGS="$CFLAGS -p"
LDFLAGS="$LDFLAGS -p")

AC_ARG_WITH(gprof,
[  --with-gprof            with gprof profiling],
CFLAGS="$CFLAGS -pg"
LDFLAGS="$LDFLAGS -pg")

AC_ARG_WITH(dmalloc,
[  --with-dmalloc          with Gray Watson's debugging malloc],
needs_dmalloc=1
needs_xmalloc=0)

AC_ARG_WITH(local-dmalloc,
[  --with-local-dmalloc    with dmalloc built in local source tree],
needs_dmalloc=1
local_dmalloc=1
needs_xmalloc=0)

AC_ARG_WITH(local-libmaa,
[  --with-local-libmaa     with libmaa built in local source tree],
local_libmaa=1)

AC_ARG_WITH(checker,
[  --with-checker          with Checker support (Linux only)],
REALCC=checkergcc)

AC_ARG_WITH(efence,
[  --with-efence           with Electric Fence (by Bruce Perens)],
REALLIBS="$REALLIBS -lefence")

AC_ARG_WITH(insure,
[  --with-insure           with Insure support (from ParaSoft Corp.)],
REALCC=insight)

AC_ARG_WITH(purify,
[  --with-purify           with Purify support (from Pure, Inc.)],
REALCC="purify gcc")

TMPPATH=.
AC_ARG_WITH(tmppath,
[  --with-tmppath=PATH     use PATH for temporary files],
TMPPATH="$withval")

DATAPATH=./web1913
AC_MSG_CHECKING(for path to raw data)
for i in ./web1913*; do
    if test -d $i; then
	DATAPATH=$i
	break
    fi
done

AC_ARG_WITH(datapath,
[  --with-datapath=PATH    use PATH for original database files],
DATAPATH="$withval")

AC_MSG_RESULT($DATAPATH)

dnl Checks for programs.
echo Checking for programs

AC_PROG_INSTALL
AC_PROG_LEX
AC_PROG_YACC
AC_PROG_RANLIB
AC_CHECK_PROGS(DICTZIP,dictzip cat)

echo .
echo Checking for libraries

if test "$local_libmaa" = 0; then
    AC_CHECK_LIB(maa,maa_init,REALLIBS="$REALLIBS -lmaa",local_libmaa=1)
fi

if test "$local_libmaa" = 1; then
    AC_MSG_CHECKING(for libmaa in local source tree)
    for i in libmaa*; do
	if test -d $i; then
	    REALLIBS="$REALLIBS -L$i -lmaa"
	    XTRACFLAGS="$XTRACFLAGS -I$i"
	    subdirs="$subdirs $i"
	    allsubdirs="$allsubdirs $i"
	    AC_MSG_RESULT(yes)
	else
	    AC_MSG_RESULT(no)
	    AC_MSG_ERROR(Libmaa not found, cannot continue)
	fi
    done
fi

if test "$local_dmalloc" = 0 -a "$needs_dmalloc" = 1; then
    AC_CHECK_LIB(dmalloc,main,
        REALLIBS="$REALLIBS -ldmalloc"
        XTRACFLAGS="$XTRACFLAGS -DDMALLOC_FUNC_CHECK",
    local_dmalloc=1)
fi

if test "$local_dmalloc" = 1; then
    AC_MSG_CHECKING(for dmalloc in local source tree)
    if test -d dmalloc; then
        REALLIBS="$REALLIBS -Ldmalloc -ldmalloc"
        XTRACFLAGS="$XTRACFLAGS -DDMALLOC_FUNC_CHECK -Idmalloc"
        XTRAHEADERS="$XTRAHEADERS dmalloc/dmalloc.h"
        allsubdirs="$allsubdirs dmalloc"
        subdirs="$subdirs dmalloc"
        AC_MSG_RESULT(yes)
    else
        AC_MSG_RESULT(no)
    fi
fi

echo .
echo Checking for header files

AC_HEADER_STDC
AC_HEADER_TIME
AC_CHECK_HEADERS(unistd.h strings.h limits.h)
AC_CHECK_HEADERS(sys/resource.h sys/time.h sys/param.h sys/wait.h)

echo .
echo Checking for system constants

AC_C_CONST
AC_C_INLINE

echo .
echo Checking for library functions

AC_CHECK_FUNCS(strdup strtol strtoul)
AC_REPLACE_FUNCS(strdup strtol strtoul)

echo .
echo Making output files

CC="$REALCC"
LIBS="$REALLIBS"

AC_CONFIG_SUBDIRS($subdirs)

AC_SUBST(DATAPATH)
AC_SUBST(TMPPATH)
AC_SUBST(WCFLAGS)
AC_SUBST(WLDFLAGS)
AC_SUBST(XTRACFLAGS)
AC_SUBST(XTRALDFLAGS)
AC_SUBST(XTRAHEADERS)
AC_SUBST(allsubdirs)
AC_OUTPUT(Makefile)

date > stamp-h.in
date > stamp-h
echo .
echo Done
