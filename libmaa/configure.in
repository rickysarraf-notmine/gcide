dnl Process this file with autoconf to produce a configure script for libmaa.
dnl
dnl Created: Sun Nov  6 13:56:03 1994 by faith@cs.unc.edu
dnl Revised: Fri Sep 12 19:22:50 1997 by faith@acm.org
dnl Copyright 1994, 1995, 1996, 1997 Rickard E. Faith (faith@acm.org)
dnl
dnl This program is free software; you can redistribute it and/or modify it
dnl under the terms of the GNU General Public License as published by the
dnl Free Software Foundation; either version 1, or (at your option) any
dnl later version.
dnl
dnl This program is distributed in the hope that it will be useful, but
dnl WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License along
dnl with this program; if not, write to the Free Software Foundation, Inc.,
dnl 675 Mass Ave, Cambridge, MA 02139, USA.
dnl
dnl $Id: configure.in,v 1.12 1997/09/12 23:38:06 faith Exp $
dnl
dnl Flag conventions:
dnl     CFLAGS and LDFLAGS should be settable on the make commandline
dnl             for optimization and stripping.
dnl     WCFLAGS and WLDFLAGS are warnings and stuff that we like (e.g., -pipe)
dnl     XTRACFLAGS, XTRALDFLAGS are for things like dmalloc
dnl     LIBOBJS is an automatically-generated list of extra objects we need
dnl     LDSHARED is the shared library linker
dnl These aren't used for libmaa:
dnl     XCFLAGS and XLDFLAGS are for X11
dnl     YCFLAGS is for yacc
dnl     LCFLAGS is for lex

AC_PREREQ(2.1)
AC_REVISION($Revision: 1.12 $)
AC_INIT(maa.h)
AC_CONFIG_HEADER(config.h)

MAA_MAJOR=0
MAA_MINOR=92

echo Configuring for libmaa $MAA_MAJOR.$MAA_MINOR
echo .

AC_ARG_WITH(cc,
[  --with-cc               with cc (instead of gcc)],
CC=cc)

AC_CANONICAL_HOST
AC_PROG_CC
AC_ISC_POSIX

REALCC="$CC"
if test "$CC" = gcc; then
    CFLAGS='-g -O'
    WCFLAGS='-Wall -pedantic'
else
    CFLAGS='-g'
fi

needs_xmalloc=1
local_dmalloc=0

case "$host" in
dnl did include: -Winline
*linux*)
    WCFLAGS="$WCFLAGS -pipe -Wwrite-strings -Wpointer-arith -Wcast-align \
        -Wmissing-prototypes -Wshadow -Wnested-externs -Waggregate-return";;
sparc-sun-sunos4*)
    WCFLAGS="$WCFLAGS -pipe";;
esac

AC_ARG_WITH(cflags,
[  --with-cflags=FLAGS     use FLAGS for CFLAGS],
CFLAGS="$withval")

AC_ARG_WITH(prof,
[  --with-prof             with prof profiling],
CFLAGS="$CFLAGS -p"
LDFLAGS="$LDFLAGS -p")

AC_ARG_WITH(gprof,
[  --with-gprof            with gprof profiling],
CFLAGS="$CFLAGS -pg"
LDFLAGS="$LDFLAGS -pg")

AC_ARG_WITH(dmalloc,
[  --with-dmalloc          with Gray Watson's debugging malloc],
needs_dmalloc=1
needs_xmalloc=0)

AC_ARG_WITH(local-dmalloc,
[  --with-local-dmalloc    with dmalloc built in local source tree],
needs_dmalloc=1
local_dmalloc=1
needs_xmalloc=0)

AC_ARG_WITH(checker,
[  --with-checker          with Checker support (Linux only)],
REALCC=checkergcc)

AC_ARG_WITH(efence,
[  --with-efence           with Electric Fence (by Bruce Perens)],
REALLIBS="$REALLIBS -lefence")

AC_ARG_WITH(insure,
[  --with-insure           with Insure support (from ParaSoft Corp.)],
REALCC=insight)

AC_ARG_WITH(purify,
[  --with-purify           with Purify support (from Pure, Inc.)],
REALCC="purify gcc")

shared=0
AC_ARG_ENABLE(shared,
[  --enable-shared         enable shared libraries],
shared=1)

TARGETLIBS=libmaa.a
RPATHFLAGS=""
if test $shared = 1; then
    TARGETLIBS="$TARGETLIBS libmaa.so"
    CFLAGS="-DSHARED_LIBMAA $CFLAGS"
    if test "$CC" = gcc; then 
	CFLAGS="$CFLAGS -fPIC"
	LDSHARED="gcc -shared"
	LDSHARED="$LDSHARED -Wl,-soname,libmaa.so.$MAA_MAJOR.$MAA_MINOR"
	RPATHFLAGS="-Wl,-rpath,."
    else
	case "$host" in
	sparc-sun-sunos4*)
	    CFLAGS="$CFLAGS -PIC"
	    LDSHARED="ld";;
	sparc-sun-sunos5*)
	    CFLAGS="$CFLAGS -KPIC -R."
	    LDSHARED="$CC -G";;
	mips-sgi-irix*)
	    CFLAGS="$CFLAGS -rpath ."
	    LDSHARED="$CC -shared";;
	*hpux*)
	    CFLAGS="$CFLAGS +z"
	    LDSHARED="ld -b";;
	*)
	    CFLAGS="$CFLAGS"
	    LDSHARED="$CC -shared"
	    RPATHFLAGS="-Wl,-rpath,.";;
	esac
    fi
fi

dnl Checks for programs.
echo Checking for programs

AC_PROG_INSTALL
AC_PROG_RANLIB
AC_CHECK_PROGS(PERL,perl4 perl)
AC_CHECK_PROGS(LATEX,latex2e latex)
AC_CHECK_PROGS(FIG2DEV,fig2dev)
AC_CHECK_PROGS(DVIPS,dvips)
AC_CHECK_PROGS(REFBIBTEX,refbibtex)
AC_CHECK_PROGS(BIBTEX,bibtex)

echo .
echo Checking for libraries

if test "$local_dmalloc" = 0 -a "$needs_dmalloc" = 1; then
    AC_CHECK_LIB(dmalloc,main,
        REALLIBS="$REALLIBS -ldmalloc"
        XTRACFLAGS="-DDMALLOC_FUNC_CHECK",
    local_dmalloc=1)
fi

if test "$local_dmalloc" = 1; then
    AC_MSG_CHECKING(for dmalloc in local source tree)
    if test -d dmalloc; then
        REALLIBS="$REALLIBS -L./dmalloc -ldmalloc"
        XTRACFLAGS="-DDMALLOC_FUNC_CHECK -I./dmalloc"
        XTRAHEADERS="./dmalloc/dmalloc.h"
        extra_subdirs="$extra_subdirs dmalloc"
        AC_MSG_RESULT(./dmalloc)
    else
        if test -d ../dmalloc; then
            REALLIBS="$REALLIBS -L../dmalloc -ldmalloc"
            XTRACFLAGS="-DDMALLOC_FUNC_CHECK -I../dmalloc"
            XTRAHEADERS="../dmalloc/dmalloc.h"
            AC_MSG_RESULT(../dmalloc)
        else
            AC_MSG_RESULT(no)
        fi
    fi
fi

if test "$needs_xmalloc" = 1; then
    LIBOBJS="$LIBOBJS xmalloc.o"
fi

echo .
echo Checking for header files

AC_HEADER_STDC
AC_HEADER_TIME
AC_CHECK_HEADERS(unistd.h strings.h getopt.h limits.h)
AC_CHECK_HEADERS(sys/resource.h sys/time.h sys/param.h sys/wait.h)

echo .
echo Checking for system constants

AC_TYPE_SIZE_T
AC_TYPE_SIGNAL
AC_C_CONST
AC_C_INLINE
AC_C_BIGENDIAN
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(void *)
AC_CHECK_SIZEOF(long long int)

echo .
echo Checking for library functions

AC_FUNC_ALLOCA
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(gettimeofday strchr strerror memcpy atexit on_exit sysconf)
AC_CHECK_FUNCS(strdup strtol strtoul)
AC_REPLACE_FUNCS(strdup strtol strtoul)

echo .
echo Making output files

CC="$REALCC"
LIBS="$REALLIBS"

AC_CONFIG_SUBDIRS($extra_subdirs)

AC_SUBST(MAA_MINOR)
AC_SUBST(MAA_MAJOR)
AC_SUBST(RPATHFLAGS)
AC_SUBST(TARGETLIBS)
AC_SUBST(LDSHARED)
AC_SUBST(WCFLAGS)
AC_SUBST(WLDFLAGS)
AC_SUBST(XTRACFLAGS)
AC_SUBST(XTRALDFLAGS)
AC_SUBST(XTRAHEADERS)
AC_OUTPUT(Makefile doc/Makefile)

date > stamp-h.in
date > stamp-h
echo .
echo Done
